es)
$ kubectl describe services
Name:              backend-feed
Namespace:         default
Labels:            service=backend-feed
Annotations:       <none>
Selector:          service=backend-feed
Type:              ClusterIP
IP Family Policy:  SingleStack
IP Families:       IPv4
IP:                10.100.148.238
IPs:               10.100.148.238
Port:              <unset>  8080/TCP
TargetPort:        8000/TCP
Endpoints:         <none>
Session Affinity:  None
Events:            <none>


Name:              backend-user
Namespace:         default
Labels:            service=backend-user
Annotations:       <none>
Selector:          service=backend-user
Type:              ClusterIP
IP Family Policy:  SingleStack
IP Families:       IPv4
IP:                10.100.189.245
IPs:               10.100.189.245
Port:              <unset>  8080/TCP
TargetPort:        8000/TCP
Endpoints:         <none>
Session Affinity:  None
Events:            <none>


Name:              frontend
Namespace:         default
Labels:            run=frontend
Annotations:       <none>
Selector:          run=frontend
Type:              ClusterIP
IP Family Policy:  SingleStack
IP Families:       IPv4
IP:                10.100.105.52
IPs:               10.100.105.52
Port:              <unset>  8080/TCP
TargetPort:        8080/TCP
Endpoints:         192.168.42.69:8080,192.168.81.186:8080
Session Affinity:  None
Events:            <none>


Name:              kubernetes
Namespace:         default
Labels:            component=apiserver
                   provider=kubernetes
Annotations:       <none>
Selector:          <none>
Type:              ClusterIP
IP Family Policy:  SingleStack
IP Families:       IPv4
IP:                10.100.0.1
IPs:               10.100.0.1
Port:              https  443/TCP
TargetPort:        443/TCP
Endpoints:         192.168.123.102:443,192.168.173.234:443
Session Affinity:  None
Events:            <none>


Name:                     publicfrontend
Namespace:                default
Labels:                   <none>
Annotations:              <none>
Selector:                 run=frontend
Type:                     LoadBalancer
IP Family Policy:         SingleStack
IP Families:              IPv4
IP:                       10.100.203.134
IPs:                      10.100.203.134
LoadBalancer Ingress:     a3eb088c5641b4cf5a9f614967a13ec9-1678704343.us-east-2.elb.amazonaws.com
Port:                     <unset>  80/TCP
TargetPort:               80/TCP
NodePort:                 <unset>  31933/TCP
Endpoints:                192.168.42.69:80,192.168.81.186:80
Session Affinity:         None
External Traffic Policy:  Cluster
Events:                   <none>


Name:                     publicreverseproxy
Namespace:                default
Labels:                   <none>
Annotations:              <none>
Selector:                 run=reverseproxy
Type:                     LoadBalancer
IP Family Policy:         SingleStack
IP Families:              IPv4
IP:                       10.100.173.132
IPs:                      10.100.173.132
LoadBalancer Ingress:     ae1ce3d57b8e54160bb02d381c26d9e4-835216623.us-east-2.elb.amazonaws.com
Port:                     <unset>  80/TCP
TargetPort:               80/TCP
NodePort:                 <unset>  32005/TCP
Endpoints:                192.168.43.200:80,192.168.78.117:80
Session Affinity:         None
External Traffic Policy:  Cluster
Events:                   <none>


Name:              reverseproxy
Namespace:         default
Labels:            service=reverseproxy
Annotations:       <none>
Selector:          service=reverseproxy
Type:              ClusterIP
IP Family Policy:  SingleStack
IP Families:       IPv4
IP:                10.100.68.101
IPs:               10.100.68.101
Port:              <unset>  8080/TCP
TargetPort:        8080/TCP
Endpoints:         <none>
Session Affinity:  None
Events:            <none>
